const { execSync } = require('child_process');
const fs = require('fs');

console.log('üöÄ Configuration du d√©ploiement Vercel...\n');

// V√©rification de l'installation de Vercel CLI
console.log('üì¶ V√©rification de Vercel CLI...');
try {
  execSync('vercel --version', { stdio: 'pipe' });
  console.log('‚úÖ Vercel CLI install√©');
} catch (error) {
  console.log('‚ùå Vercel CLI non install√©');
  console.log('üì• Installation de Vercel CLI...');
  try {
    execSync('npm install -g vercel', { stdio: 'inherit' });
    console.log('‚úÖ Vercel CLI install√© avec succ√®s');
  } catch (installError) {
    console.log('‚ùå Erreur lors de l\'installation:', installError.message);
    console.log('üí° Installez manuellement: npm install -g vercel');
    process.exit(1);
  }
}

// Cr√©ation du fichier vercel.json optimis√©
console.log('\nüìù Cr√©ation du fichier vercel.json...');
const vercelConfig = {
  "version": 2,
  "builds": [
    {
      "src": "package.json",
      "use": "@vercel/next"
    }
  ],
  "routes": [
    {
      "src": "/(.*)",
      "dest": "/"
    }
  ],
  "env": {
    "NODE_ENV": "production"
  },
  "functions": {
    "app/api/**/*.ts": {
      "maxDuration": 30
    }
  }
};

try {
  fs.writeFileSync('vercel.json', JSON.stringify(vercelConfig, null, 2));
  console.log('‚úÖ vercel.json cr√©√©');
} catch (error) {
  console.log('‚ùå Erreur lors de la cr√©ation de vercel.json:', error.message);
}

// Cr√©ation du fichier .vercelignore
console.log('\nüìù Cr√©ation du fichier .vercelignore...');
const vercelIgnore = `# D√©pendances de d√©veloppement
node_modules
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Fichiers de build
.next
out
dist

# Fichiers de test
coverage
.nyc_output

# Fichiers de cache
.cache
.parcel-cache

# Fichiers de logs
*.log
logs

# Fichiers temporaires
.tmp
.temp

# Fichiers de configuration locale
.env.local
.env.development.local
.env.test.local
.env.production.local

# Fichiers de syst√®me
.DS_Store
Thumbs.db

# Fichiers de d√©veloppement
*.tsbuildinfo
.vscode
.idea

# Scripts de d√©veloppement
launch-dev.js
clean-windows.js
deploy-git.js
setup-vercel-deploy.js
diagnostic-final.js
simulate-vercel.js

# Documentation locale
RAPPORT_NETTOYAGE_FINAL.md

# Tests
tests/
*.spec.ts
*.test.ts

# Migrations (√† g√©rer s√©par√©ment)
supabase/migrations/
`;

try {
  fs.writeFileSync('.vercelignore', vercelIgnore);
  console.log('‚úÖ .vercelignore cr√©√©');
} catch (error) {
  console.log('‚ùå Erreur lors de la cr√©ation de .vercelignore:', error.message);
}

// V√©rification de la configuration Git
console.log('\nüîç V√©rification de la configuration Git...');
try {
  const remoteUrl = execSync('git remote get-url origin', { encoding: 'utf8' }).trim();
  console.log(`üåê Repository: ${remoteUrl}`);
  
  if (remoteUrl.includes('github.com')) {
    console.log('‚úÖ Repository GitHub d√©tect√©');
  } else if (remoteUrl.includes('gitlab.com')) {
    console.log('‚úÖ Repository GitLab d√©tect√©');
  } else {
    console.log('‚ö†Ô∏è Repository non reconnu');
  }
} catch (error) {
  console.log('‚ùå Erreur lors de la v√©rification du repository:', error.message);
}

// Instructions pour le d√©ploiement
console.log('\nüìã Instructions de d√©ploiement Vercel:');
console.log('\n1Ô∏è‚É£ D√©ploiement manuel:');
console.log('   vercel --prod');
console.log('\n2Ô∏è‚É£ D√©ploiement avec variables d\'environnement:');
console.log('   vercel --prod --env NEXT_PUBLIC_SUPABASE_URL=your_url');
console.log('   vercel --prod --env NEXT_PUBLIC_SUPABASE_ANON_KEY=your_key');
console.log('\n3Ô∏è‚É£ Configuration automatique:');
console.log('   - Connectez votre repository GitHub sur vercel.com');
console.log('   - Configurez les variables d\'environnement');
console.log('   - Activez le d√©ploiement automatique');

// Cr√©ation d'un script de d√©ploiement rapide
console.log('\nüìù Cr√©ation du script de d√©ploiement rapide...');
const deployScript = `#!/bin/bash
echo "üöÄ D√©ploiement rapide vers Vercel..."

# V√©rification de l'√©tat Git
if [ -n "$(git status --porcelain)" ]; then
    echo "‚ö†Ô∏è Modifications non commit√©es d√©tect√©es"
    echo "üì¶ Ajout et commit des modifications..."
    git add .
    git commit -m "üöÄ D√©ploiement automatique - $(date)"
    git push origin main
fi

# D√©ploiement Vercel
echo "üì§ D√©ploiement vers Vercel..."
vercel --prod --yes

echo "‚úÖ D√©ploiement termin√© !"
`;

try {
  fs.writeFileSync('deploy-vercel.sh', deployScript);
  console.log('‚úÖ Script deploy-vercel.sh cr√©√©');
} catch (error) {
  console.log('‚ùå Erreur lors de la cr√©ation du script:', error.message);
}

// Cr√©ation d'un fichier de configuration des variables d'environnement
console.log('\nüìù Cr√©ation du fichier de configuration des variables...');
const envConfig = `# Configuration des variables d'environnement pour Vercel
# Copiez ce fichier vers .env.local pour le d√©veloppement local

# Supabase Configuration
NEXT_PUBLIC_SUPABASE_URL=your_supabase_project_url
NEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key

# Configuration de l'application
NEXT_PUBLIC_APP_NAME=SoliReserve Enhanced
NEXT_PUBLIC_APP_VERSION=0.1.0
NEXT_PUBLIC_APP_ENVIRONMENT=production

# Configuration des fonctionnalit√©s
NEXT_PUBLIC_ENABLE_ANALYTICS=true
NEXT_PUBLIC_ENABLE_NOTIFICATIONS=true
NEXT_PUBLIC_ENABLE_PDF_GENERATION=true

# Configuration de s√©curit√©
NEXTAUTH_SECRET=your_nextauth_secret
NEXTAUTH_URL=https://your-domain.vercel.app

# Configuration des performances
NEXT_PUBLIC_ENABLE_CACHE=true
NEXT_PUBLIC_CACHE_DURATION=3600
`;

try {
  fs.writeFileSync('env.example', envConfig);
  console.log('‚úÖ Fichier env.example cr√©√©');
} catch (error) {
  console.log('‚ùå Erreur lors de la cr√©ation du fichier env:', error.message);
}

console.log('\nüéâ Configuration Vercel termin√©e !');
console.log('üìã Fichiers cr√©√©s:');
console.log('   - vercel.json (configuration Vercel)');
console.log('   - .vercelignore (fichiers ignor√©s)');
console.log('   - deploy-vercel.sh (script de d√©ploiement)');
console.log('   - env.example (variables d\'environnement)');

console.log('\nüîó Prochaines √©tapes:');
console.log('   1. Ex√©cuter: vercel login');
console.log('   2. Configurer les variables d\'environnement');
console.log('   3. Ex√©cuter: vercel --prod');
console.log('   4. Ou connecter le repository sur vercel.com');

console.log('\nüìö Documentation:');
console.log('   - https://vercel.com/docs');
console.log('   - https://vercel.com/docs/concepts/projects/environment-variables');
console.log('   - https://vercel.com/docs/concepts/git');

console.log('\nüöÄ Votre application est pr√™te pour le d√©ploiement Vercel !');
